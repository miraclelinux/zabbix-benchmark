# -*- rd -*-

= zabbix-benchmark使用方法

== これは何?

zabbix-benchmarkはZabbix用のベンチマークツールです。
今のところ、ヒストリの書込性能の測定にのみ対応しています。


== 準備

=== Zabbix環境の準備

==== Zabbixサーバの準備

通常のZabbixを使用する場合は、以下のパッチを当ててビルド・インストールする。

* patches/zabbix-2.0.3-histsync-log.patch
* patches/zabbix-2.0.3-poller-log.patch

HistoryGluon版のZabbixを使用する場合は、zabbix-server.confに以下の設定を加える。

  BenchmarkMode=1

==== zabbix-server.confの修正

現在のzabbix-benchmarkではベンチマーク中にログローテートが発生するとDB書き込み
数を正しく集計することが出来ないため、LogFileSizeを最大サイズに設定する。

  LogFileSize=1024

また、計測中はHouseKeeperによる負荷変動を抑えたいため、DisableHousekeepingを1
に設定する。

  DisableHousekeeping=1

==== 監視対象Linuxホストの準備

監視対象となるLinuxホストを数台用意し、通常の手順でzabbix-agentを動作させる。
監視対象ホストは多ければ多いほど良いが、用意できなければ一台でも構わない。
サーバ側にはひとつのzabbix-agentを複数の異なるホストとして登録することで、監視
アイテム数を増やしていき、DB書き込み負荷をかける。

==== Zabbixサーバへの監視テンプレート登録

ベンチマークには以下のテンプレートを使用する。

* conf/zabbix/template-linux-5sec.xml
  * 監視アイテム数: 102個
  * 更新間隔: 5秒

このテンプレートをZabbixのWebインターフェースで登録する。


=== zabbix-benchmarkの準備

==== Rubyのインストール

CentOSやScientific Linuxの場合は、以下のコマンドでrubyとgemをインストールする。

  # yum install rubygems ruby-devel

==== ZabbixAPIライブラリのインストール

zabbix-benchmarkは、zbxapiというサードパーティ製のライブラリを使用する。
zbxapiはgemコマンドでインストールすることができる。

  # gem install zbxapi

動作確認済のzbxapiはVersion 0.2.415である。zbxapiのバージョン間の非互換性が原
因でzabbix-benchmarkが動作しない場合は、以下のようにバージョン指定を付けて
zbxapiをインストールする。

 $ gem install zbxapi -v 0.2.415

==== 設定ファイルの用意

conf/config-sample.ymlをconf/config.ymlにコピーし、内容を適切に修正する。
それぞれの値の意味は以下の通りである。

* uri
  * ZabbixフロントエンドのURI
* login_user
  * Zabbixフロントエンドのログインユーザ名
  * 対象のユーザにAPIの使用権限が付与されている必要がある。
  * Zabbix 2.0の場合、AdminにはデフォルトでAPI使用権が設定されている。
* login_pass
  * 上記ユーザのパスワード
* num_host
  * 登録ホスト数の上限。
  * この値に達するまで、段階的にホスト数を増やして計測が行われる
* hosts_step
  * 一回のステップで増やすホスト数
* host_group
  * ダミーホストを登録するホストグループ。
  * グループは事前に用意しておく。
* template_name
  * 使用する監視テンプレート。
  * テンプレートは事前に用意しておく。
* agents (別名: custom_agents)
  * 使用するzabbix-agentのIPアドレスとポート
  * 複数指定可能。複数指定した場合は、ダミーホストが均等に割り振られる。
  * 指定しない場合は、127.0.0.1:10050が使用される。
* zabbix_log_file
  * Zabbixサーバのログファイルのパス。
* rotate_zabbix_log
  * trueの場合、ステップ毎にZabbixサーバのログをローテートする。
* write_throughput_result_file
  * 書き込みスループットの計測結果を出力するファイル。
* warmup_duration
  * 一ステップのセットアップ完了から計測実行まで待ち時間(秒)。
  * zabbix_server.confのCacheUpdateFrequency以上の値が望ましい。
* measurement_duration
  * 一ステップの計測時間。
* histories
  * Zabbixから収集するヒストリアイテムのホスト名、キー、保存パスを指定する。
  * 複数のアイテムを指定可能です。

==== 接続の確認

以下のコマンドで、Zabbixフロントエンドへの接続を確認する。

  $ ./zabbix-benchmark api_version

問題なく接続できれば、以下のように出力される。

  1.4


== ベンチマークの実行

=== アクセス権限

zabbix-benchmarkは実行の際にZabbixのログをローテートするため、「zabbix」ユーザ
ー権限で実行する。

=== 実行コマンド

以下のコマンドでzabbix-benchmarkを実行する。

  $ ./zabbix-benchmark

ベンチマークの実行が終了すると、指定したファイルに結果が出力される。


== 出力ファイルの内容

出力ファイルには、CSV形式で計測データが出力される。
各カラムの内容は、順番に以下の通りである。

* 開始時刻
* 終了時刻
* 監視ホスト数
* 有効な監視アイテム数
* 一アイテムの平均書き込み時間[msec]
* 総書き込みアイテム数
* 総書き込み時間[sec]
* Zabbixエージェントとの通信エラーのログエントリ数
