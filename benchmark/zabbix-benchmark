#!/usr/bin/env ruby
require 'optparse'
require 'lib/zabbix-benchmark'

DEFAULT_CONFIG_PATH = "conf/config.yml"

OptionParser.new do |options|
  config = BenchmarkConfig.instance

  options.banner = "Usage: #{options.program_name} [options] [command]"

  if FileTest.exists?(DEFAULT_CONFIG_PATH)
    config.load_file(DEFAULT_CONFIG_PATH)
  end

  options.on("-u", "--uri URI") do |uri|
    config.uri = uri
  end

  options.on("-U", "--user USER") do |user|
    config.login_user = user
  end

  options.on("-P", "--password PASSWORD") do |pass|
    config.login_pass = pass
  end

  options.on("-n", "--num-hosts NUM_HOSTS") do |num|
    config.num_hosts = num.to_i
  end

  options.on("-s", "--hosts-step STEP") do |step|
    config.hosts_step = step.to_i
  end

  options.on("-a", "--agent ADDRESS:PORT") do |agent|
    if /(.+):(\d+)/ =~ agent
      address = $1
      port = $2.to_i
    else
      address = agent
      port = 10050
    end
    config.custom_agents.push({"ip_address" => address, "port" => port})
  end

  options.on("-l", "--zabbix-log FILE") do |file|
    config.zabbix_log_file = file
  end

  options.on("-w", "--warmup-duration DURATION") do |duration|
    config.warmup_duration = duration.to_i
  end

  options.on("-m", "--measure-duration DURATION") do |duration|
    config.measurement_duration = duration.to_i
  end

  options.on("--show-config") do
    p config
    puts ""
  end

  options.on("--list-commands") do
    commands = Benchmark.public_instance_methods(false)
    help_string = commands.join(", ")
    puts "Available commands:"
    puts "  #{help_string}"
    exit
  end

  options.parse!(ARGV)
end

benchmark = Benchmark.new
command = ARGV[0] || "run"
benchmark.send(command)
